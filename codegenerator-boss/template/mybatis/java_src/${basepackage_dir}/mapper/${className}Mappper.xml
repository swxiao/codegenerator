<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#macro mapperEl name type>${r"#{"}${name}${",jdbcType="}${type}${"}"}</#macro>

<mapper namespace="${basepackage}.repositories.I${className}Repository">

	<insert id="save" parameterType="${className}">
		<![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        	<@mapperEl name=column.columnNameFirstLower type=column.sqlTypeName/><#if column_has_next>,</#if>
        </#list>
        )
    	]]>
	</insert>

	<select id="findAll" resultType="${className}">
		<![CDATA[
		SELECT
			<#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        	</#list>
		FROM
		    ${table.sqlName}
		    ]]>
	</select>

	<select id="findOne" resultType="${className}" parameterType="${className}">
		SELECT
		    <#list table.columns as column>
	        ${column.sqlName} <#if column_has_next>,</#if>
	        </#list>
		FROM
		    ${table.sqlName}
		WHERE
			${table.pkColumn.sqlName} = <@mapperEl name=table.pkColumn.columnNameFirstLower type=table.pkColumn.sqlTypeName/>
	</select>

	<select id="queryPage" parameterType="com.bubble.foundation.mybatis.page.Page" resultType="${className}">
		SELECT
		    <#list table.columns as column>
	        ${column.sqlName} <#if column_has_next>,</#if>
	        </#list>
		FROM
		    ${table.sqlName}
		<where>
	       <#list table.columns as column>
		       <#if column.isDateTimeColumn>
		       <if test="params.${column.columnNameFirstLower}Begin != null and params.${column.columnNameFirstLower}Begin != ''">
					AND ${column.sqlName} >= <@mapperEl name=column.columnNameFirstLower+"Begin" type=column.sqlTypeName/>
			   </if>
			   <if test="params.${column.columnNameFirstLower}End != null and params.${column.columnNameFirstLower}End != ''">
					AND ${column.sqlName} &lt;= <@mapperEl name=column.columnNameFirstLower+"End" type=column.sqlTypeName/>
			   </if>
		       <#else>
		       <if test="params.${column.columnNameFirstLower} != null and params.${column.columnNameFirstLower} != ''">
					AND ${column.sqlName} = <@mapperEl name=column.columnNameFirstLower type=column.sqlTypeName/>
				</if>
		       </#if>
	       </#list>
		</where>
	</select>
	
	<select id="query" parameterType="${className}" resultType="${className}">
		SELECT
		    <#list table.columns as column>
	        ${column.sqlName} <#if column_has_next>,</#if>
	        </#list>
		FROM
		    ${table.sqlName}
		<where>
			<#list table.columns as column>
		      <#if column.isDateTimeColumn>
		       <if test="${column.columnNameFirstLower}Begin != null and ${column.columnNameFirstLower}Begin != ''">
					AND ${column.sqlName} >= <@mapperEl name=column.columnNameFirstLower+"Begin" type=column.sqlTypeName/>
			   </if>
			   <if test="${column.columnNameFirstLower}End != null and ${column.columnNameFirstLower}End != ''">
					AND ${column.sqlName} &lt;= <@mapperEl name=column.columnNameFirstLower+"End" type=column.sqlTypeName/>
			   </if>
		       <#else>
		       <if test="${column.columnNameFirstLower} != null and ${column.columnNameFirstLower} != ''">
					AND ${column.sqlName} = <@mapperEl name=column.columnNameFirstLower type=column.sqlTypeName/>
				</if>
		       </#if>
	       </#list>			
		</where>
	</select>
	

	<update id="update" parameterType="${className}">
		<![CDATA[
        UPDATE ${table.sqlName} SET
	        <#list table.notPkColumns as column>
	        ${column.sqlName} = <@mapperEl name=column.columnNameFirstLower type=column.sqlTypeName/><#if column_has_next>,</#if>
	        </#list>
        WHERE 
        	${table.pkColumn.sqlName} = <@mapperEl name=table.pkColumn.columnNameFirstLower type=table.pkColumn.sqlTypeName/>
	    ]]>
	</update>
	
	<delete id="delete" parameterType="${className}">
		<![CDATA[
		DELETE
		FROM
		    ${table.sqlName}
		WHERE
			${table.pkColumn.sqlName} = <@mapperEl name=table.pkColumn.columnNameFirstLower type=table.pkColumn.sqlTypeName/>
		]]>
	</delete>


</mapper>